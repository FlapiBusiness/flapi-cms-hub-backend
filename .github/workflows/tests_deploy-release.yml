name: tests_deploy-release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  tests_deploy-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js to specific version LTS and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies for project
        run: npm install

      - name: Lint TypeScript and ESLint for project
        run: npm run lint:ts && npm run lint:eslint

      - name: Setup Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Generate .env file
        run: |
          cp .env.example .env
          sed -i 's/AWS_ACCESS_KEY_ID=xxxxxxx/AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}/g' .env
          sed -i 's/AWS_SECRET_ACCESS_KEY=xxxxxxx/AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}/g' .env
          sed -i 's/O2SWITCH_API_TOKEN=xxxxxxx/O2SWITCH_API_TOKEN=${{ secrets.O2SWITCH_API_TOKEN }}/g' .env
          sed -i 's/O2SWITCH_DATABASE_USERNAME=xxxxxxx/O2SWITCH_DATABASE_USERNAME=${{ secrets.O2SWITCH_DATABASE_USERNAME }}/g' .env
          sed -i 's/O2SWITCH_DATABASE_PASSWORD=xxxxxxx/O2SWITCH_DATABASE_PASSWORD=${{ secrets.O2SWITCH_DATABASE_PASSWORD }}/g' .env
          sed -i 's/GITHUB_PERSONAL_ACCESS_TOKEN=xxxxxxx/GITHUB_PERSONAL_ACCESS_TOKEN=${{ secrets.PAT_TOKEN }}/g' .env

      - name: Generate .env.test file
        run: |
          cp .env.test.example .env.test

      - name: Build and run with Docker Compose
        run: |
          docker-compose up --build -d

      - name: Check services healthiness
        uses: thegabriele97/dockercompose-health-action@main
        with:
          timeout: '60'
          workdir: '.'

      - name: Japa - Run tests unit
        run: npm run test:staging-prod

      - name: Shutdown Docker Compose
        run: |
          docker-compose down

      - name: Deploy PR (main) for new Release
        uses: googleapis/release-please-action@v4
        with:
          release-type: node
          target-branch: main
          config-file: 'release-please-config.json'
          token: ${{ secrets.PAT_TOKEN }}
